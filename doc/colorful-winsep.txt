*colorful-winsep.txt*			Make your nvim window separators colorful

License: MIT License
URL: https://github.com/nvim-zh/colorful-winsep.nvim

==============================================================================
INTRODUCTION					*colorful-winsep-intro*

Currently in Neovim, we can not make the active window distinguishable via the
window separator. This plugin will color the border of active window, like
what tmux does for its different panes.

==============================================================================
INTERFACE					*colorful-winsep-interface*
	Configure the plugin with the given table. {config} accepts the
	following keys:

	• hi: `table`
		This accepts a table same as |nvim_set_hl()|, see it.
		Default: >lua
			{
			  fg = "#957CC6",
			  bg = (background color of |hl-Normal|)
			}
<
	• no_exec_files: table
		List of filetype deactivating the plugin.
		Default: >lua
			{ "packer", "TelescopePrompt", "mason", "CompetiTest" }
<
	
	• smooth: `bool`
		Animation switch
		Default: >lua
		    [true]
<
	• symbols: `table`
		Symbols for separator lines, the order: horizontal, vertical,
		top left, top right, bottom left, bottom right.
		Default: >lua
			{ "━", "┃", "┏", "┓", "┗", "┛" }
<
	• anchor: `table`
		Set the relative value of the specified direction coordinates,
		as well as the height and width
		Default: >lua
		       {left   = { height = 1, x = -1, y = -1 },
			right  = { height = 1, x = -1, y = 0 },
			up     = { width  = 0, x = -1, y = 0 },
			bottom = { width  = 0, x = 1 , y = 0 }}
<
	
Example:
>lua
	require("colorful-winsep").setup({
	  hi = {
	    bg = "#16161E",
	    fg = "#1F3442",
	  },
	  no_exec_files = { "packer", "TelescopePrompt", "mason", "CompetiTest", "NvimTree" },
	  symbols = { "━", "┃", "┏", "┓", "┗", "┛" },
	  anchor = {
		left = { height = 1, x = -1, y = -1 },
		right = { height = 1, x = -1, y = 0 },
		up = { width = 0, x = -1, y = 0 },
		bottom = { width = 0, x = 1, y = 0 },
	},
	})
<
				      *colorful-winsep.utils.calculate_number_windows()* 
utils.calculate_number_windows() 
	Return statistics of the current window number.
	It will filter out floating window to get the real number.


						*colorful-winsep.utils.direction_have()* 
utils.direction_have({direction})
	Check the {direction} if there is a window.
	{direction} must be one of the "h", "l", "k", "j".
Example:
>lua
	local direction = { left = "h", right = "l", up = "k", down = "j" }
	local b = require("colorful-winsep.utils").direction_have(direction.left)
	if b then
	  vim.print "left have win"
	else
	  vim.print "left not have win"
	end
<


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
